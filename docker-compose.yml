version: "3.9"
services:
  nest:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/usr/src/app/backend
      - ignore_backend:/usr/src/app/backend/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    stdin_open: true
    tty: true

  artificial_intelligence_backend:
    build:
      context: ./ai_backend
      dockerfile: Dockerfile
    volumes:
      - ./ai_backend/data:/data/
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
  
  arxiv_api_scraper:
    build:
      context: ./data_ingest
      dockerfile: Dockerfile
    volumes:
      - ./data_ingest/_data:/app/_data/
    stdin_open: true
    tty: true

  postgres:
    image: postgres:16.0-alpine3.18
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - backend_database:/var/lib/postgresql/data
    ports:
      - "${DB_HOST_PORT}:${DB_PORT}"

  next:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/usr/src/app/frontend
      - ignore_frontend:/usr/src/app/frontend/node_modules
    ports:
      - "3000:3000"
    depends_on:
      nest:
        condition: service_healthy
    stdin_open: true
    tty: true

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
volumes:
  ignore_backend:
  ignore_frontend:
  backend_database:
